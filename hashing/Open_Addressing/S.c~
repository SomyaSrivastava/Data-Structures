#include<stdio.h>
#include<stdlib.h>

struct node
{
  int n;
  struct node *next;
};

struct list
{
struct node *head;
struct node *tail;
int count;
};

int append(struct list *l,int data);
void init(struct list *l);
int add(struct list *l,int data,int pos);
int delete(struct list *l,int pos);
void display(struct list l);

void main()
{
struct list l;
init(&l);
int ch,data,pos,flag;

   while(1)
         {
              printf("\n****MENU****");
              printf("\nCASE 1:INSERT");
              printf("\nCASE 2:DELETE");
              printf("\nCASE 3:INSERT IN ODER");
              printf("\nCASE 4:DISPLAY");
              printf("\nCASE 5:EXIT");
              printf("\nENETER THE CHOICE");
              scanf("%d",&ch);
                         
                             switch(ch)
                                        {
                                             case 1: printf("\nenter the data to insert");
                                                     scanf("%d",&data);
                                                     printf("\nenter the pos");
                                                     scanf("%d",&pos);
                                                     flag=add(&l,data,pos);
                                                     if(flag==0)
                                                     printf("\nsuccessfully");
                                                     else
                                                     printf("\nunsuccessfully");
                                                     break;
                                             case 2: printf("\nenter the pos to delete");
                                                     scanf("%d",&pos);
                                                     delete(&l,pos);
                                                     if(flag==0)
                                                     printf("\nsuccessfully");
                                                     else
                                                     printf("\nunsuccessfully");
                                                     break;
                                             case 3: printf("\nenter the element");
                                                     scanf("%d",&data);
                                                     flag=append(&l,data);
                                                     if(flag==1)
                                                     display(l);
                                                     else
                                                     printf("\nunsuccessfully");
                                                     break;
                                             case 4:display(l);
                                                     break;
                                             case 5:exit(1);
                                                     break;
                                       }
             }
}   

void init(struct list *l)
{
   l->head=NULL;
   l->tail=NULL;
   l->count=0;
}

int append(struct list *l,int data)
{
   struct node *ptr,*temp;
   temp=l->head;
   int i;
   ptr=(struct node*)malloc(sizeof(struct node));
   if(ptr!=NULL)
	return 0;  
     
	ptr->n=data;
	ptr->next=NULL;
  
       
	
             if(l->head==NULL)
                {
                    l->head=l->tail=ptr;
                    l->count++;
                  
                }          
          else if(temp!=NULL)
              {
                while(temp!=NULL)
                {
                   if(ptr->n<temp->n)
                      {
                          ptr->next=temp;
                          if(temp==l->head)
                            {
                              ptr=l->head;
                            }
                           l->count++;
                       }
                    temp=temp->next;
                 }
               }
           else 
               {
                      temp->next=ptr;
                       l->tail=ptr;
                       l->count++;
  
               }
      return 1;
}

int add(struct list *l,int data,int pos)
{ 
   struct node *temp,*prev,*ptr;
   int i;
   ptr=(struct node*)malloc(sizeof(struct node));
   ptr->n=data;
   ptr->next=NULL;
        

             if(l->head==NULL)
                {
                    l->head=l->tail=ptr;
                    l->count++;
                    return 0;

                }
            else if(pos==0)
                {
                  ptr->next=l->head;
                  l->head=ptr;
                  if(l->count==0)
                   {
                     l->tail=ptr;
                   }
                  l->count++;
                   return 0;
                }
           else 
                {
                  prev=l->head;
                  for(i=0;i<pos-1;i++)
                      {
                         prev=prev->next; 
                      }
                         ptr->next=prev->next;
                         prev->next=ptr;
                         if(prev==l->tail)
                            {
                              l->tail=ptr;
                            }
                         l->count++;
                          return 0;
                  }
        return 1;
}          
int delete(struct list *l,int pos)
{ 
   struct node *temp,*prev,*ptr;
   int i;
        

             if(l->head==NULL)
                {
                    return 1;
                }
            else if(pos==0)
                {
                  ptr=l->head;
                  l->head=ptr->next;
                  free(ptr);
                  if(l->tail==ptr)
                    {
                     l->tail=NULL;
                    }
                 
                  l->count--;
                  return 0;
                }
           else 
                {
                  prev=l->head;
                  for(i=0;i<pos-1;i++);
                      {
                         prev=prev->next; 
                      }
                      ptr=prev->next;
                      if(ptr==l->tail)
                       {
                         l->tail=NULL;
                       }
                       prev->next=ptr->next;                    
                       free(ptr);
                       l->count--;
                       return 0;
                  }
        return 1;
}          

void display(struct list l)
 {
     struct node *ptr=l.head;
         while(ptr!=NULL)
             {
                printf("%d",ptr->n);
                 ptr=ptr->next;
              }
            printf("\n");
}

